version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik-proxy
    restart: unless-stopped
    security_opt:
      - "no-new-privileges:true"
    networks:
      - proxy
    ports:
      - "80:80" # http
      - "443:443" # https
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./config/acme.json:/acme.json"
      - "./config:/config"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      # Proxy
      - traefik.http.routers.traefik-ui.entrypoints=websecure
      - traefik.http.routers.traefik-ui.rule=Host(`${TRAEFIK_URL}`)
      - traefik.http.routers.traefik-ui.service=api@internal
      - traefik.http.routers.traefik-ui.middlewares=user-auth@file
      - traefik.http.services.traefik-ui.loadbalancer.server.port=8080

  portainer:
    image: "portainer/portainer-ce:latest"
    container_name: traefik-portainer
    restart: unless-stopped
    security_opt:
      - "no-new-privileges:true"
    networks:
      - proxy
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./storage/portainer-data:/data"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      # Proxy
      - traefik.http.routers.portainer-secure.entrypoints=websecure
      - traefik.http.routers.portainer-secure.rule=Host(`${PORTAINER_URL}`)
      - traefik.http.routers.portainer-secure.service=portainer
      - traefik.http.services.portainer.loadbalancer.server.port=9000

  uptime:
    image: louislam/uptime-kuma:1
    container_name: traefik-uptime
    restart: unless-stopped
    security_opt:
      - "no-new-privileges:true"
    networks:
      - proxy
    volumes:
      - "./storage/uptimekuma-data:/app/data"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      # Proxy
      - traefik.http.routers.uptime-kuma-secure.entrypoints=websecure
      - traefik.http.routers.uptime-kuma-secure.rule=Host(`${UPTIME_KUMA_URL}`)
      - traefik.http.routers.uptime-kuma-secure.service=uptime-kuma
      - traefik.http.services.uptime-kuma.loadbalancer.server.port=3001

  minio:
    container_name: traefik-minio
    image: quay.io/minio/minio:RELEASE.2023-06-19T19-52-50Z
    command: server /data --address ":9090" --console-address ":9091"
    restart: unless-stopped
    security_opt:
      - "no-new-privileges:true"
    environment:
      - MINIO_SITE_REGION=${MINIO_SITE_REGION}
      - MINIO_ROOT_USER=${MINIO_USERNAME}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      # URL Site
      - MINIO_DOMAIN=${MINIO_SERVER_URL}
      - MINIO_SERVER_URL=https://${MINIO_SERVER_URL}
      - MINIO_BROWSER_REDIRECT_URL=https://${MINIO_BROWSER_REDIRECT_URL}
    networks:
      - proxy
    volumes:
      - ./storage/minio-data:/data
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      # S3
      - traefik.http.routers.minio-s3-secure.entrypoints=websecure
      - traefik.http.routers.minio-s3-secure.rule=Host(`${MINIO_SERVER_URL}`)
      - traefik.http.routers.minio-s3-secure.service=minio-s3
      - traefik.http.services.minio-s3.loadbalancer.server.port=9090
      # Console
      - traefik.http.routers.minio-console-secure.entrypoints=websecure
      - traefik.http.routers.minio-console-secure.rule=Host(`${MINIO_BROWSER_REDIRECT_URL}`)
      - traefik.http.routers.minio-console-secure.service=minio-console
      - traefik.http.services.minio-console.loadbalancer.server.port=9091

  postgres:
    image: postgres
    container_name: traefik-postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - proxy
    volumes:
      - ./storage/postgres-data:/var/lib/postgresql/data
    labels:
      - traefik.enable=false
      - traefik.docker.network=proxy

  redis:
    image: redis
    container_name: traefik-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - proxy
    volumes:
      - ./storage/redis-data:/var/lib/redis
    labels:
      - traefik.enable=false
      - traefik.docker.network=proxy

volumes:
  storage:


networks:
  proxy:
    external: true
